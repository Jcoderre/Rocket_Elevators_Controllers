"/******************************************************************|
*   This pseudo code is about the residential elevator controllers.|
* _________________________________________________________________|
*           it is based on the fact that we have :                 |
*                                                                  |
*                  - 1 column of 2 elevators,                      |
*                  - 10 floors                                     |
*__________________________________________________________________|
*           The facts that those object can be moved :             |
*                                                                  |
*                  - Column,                                       |
*                  - Elevator,                                     |
*                  - Call Button ( Outside the elevator ),         |
*                  - Doors ( Elevator Doors ),                     |
*                  - Elevator Button  ( inside the elevator )      |
*_________________________________________________________________ |
*           Button that can be found outside the elevator :        |
*                                                                  |
*                  - Up                                            |
*                  - Down                                          |
*_________________________________________________________________ | 
*           Button that can be found in the elevator :             |
*                                                                  |
*                  - Buttons from 1 to 10                          |
*                  - Emergency stop Button                         |
*                  - Open Doors                                    |
*                  - Close Doors                                   |
*_________________________________________________________________ |
*                                                                  |
*            PseudoCode written By : J.Coderre                     |
*                 Date of creation : 2020-09-21                    |
*                                                                  |
******************************************************************/"

START

' var time_Now = new Date().getTime();
INPUT time_Now = GET current time 


'/****************   Object ********************/

DEFINE Column USING id AND status:****
    ID: id,
    Status: status,   
    ElevatorList: SET to empty List

    SEQUENCE createElevatorList USING elevator_amount   
       
    ENDSEQUENCE
    SEQUENCE   createStatus    

    ENDSEQUENCE
ENDDEFINE


DEFINE Elevator 
    ID: id,
    SET status to IDLE      ' MOVING or IDLE or STOP
    SET Elevator_queue to empty List

    WHEN button_Up is pressed
        SET user_travel to up
        EXECUTE SEQUENCE display_Btn_Active()
        ADD button_Up  to elevator_queue 

    WHEN button_Down is pressed
        SET user_travel to down
        EXECUTE SEQUENCE display_Btn_Active()
        ADD button_Down to Elevator_queue

    WHEN Button_Is_Press
    EXECUTE SEQUENCE display_Btn_Active()
        IF user_input > current_floor 
            SET user_travel to up
            ADD Button_Is_Press to Elevator_queue
        ELSE IF user_input < current_Floor
            SET user_travel to down
            ADD Button_Is_Press to Elevator_queue
        ENDIF

    WHEN Elevator_queue is empty
        SET status to IDLE

    WHEN Elevator_queue is not empty
        SET status to MOVING
    
ENDDEFINE
INSTANTIATE Elevator



'/****************   Display SEQUENCEs   **********************/

SEQUENCE ShowTime()
    DISPLAY the time somewhere in the elevator; ' Display time_Now
ENDSEQUENCE

SEQUENCE display_Btn_Active()
    IF user input buttons
        IF buttons are still in queue
            Activate buttons light
        ELSE IF buttons are no more in queue
            Desactivate button light
        ENDIF
    ENDIF
ENDSEQUENCE

SEQUENCE display_Active_Floor()
    IF elevator is on a floor 
        Avtivate active floor on intern and extern display
    ENDIF
ENDSEQUENCE

'/************************ Elevator SEQUENCEs ***************************/

SEQUENCE Initialize()
    IF elevator is IDLE for 5 minutes
        go down to first floor
        Slow Down when necessary    ' SlowDownIfNecessary(), DoubleSafetyStop()
        IF a Button is press  AND other elevator is busy and unable to take request
            IF  the queue is traveling down 
                add to Elevator_queue
                slow down when necessary     ' SlowDownSafety(), DoubleSafetyStop()
                stop at user floor
            ELSE IF the queue is travelling up
                ADD to Elevator_queue
                slow down when necessary    ' SlowDownSafety(), DoubleSafetyStop()
                stop at next floor
                take queue query
            ENDIF
        ENDIF
    ENDIF
ENDSEQUENCE

SEQUENCE Queue()*****
    IF elevator status is MOVE OR IDLE
        IF elevator are unable to take request
            Create an a array of pending request
        ENDIF
        ELSE IF available
            Create an a array of request
            Execute that array in order
            IF elevator is traveling
                ADD all Call Buttons on the way to Elevator_queue        ' Extern Button
                ADD all elevator button on the way to Elevator_queue    ' Intern Button
            ENDIF
        ELSE IF request queue and check for pending request
            IF request are pending 
                Execute that array in order
            ELSE IF no request are pending
                EXECUTE SEQUENCE Initialize()
            ENDIF
        ENDIF
    ENDIF
ENDSEQUENCE

SEQUENCE Open_and_Close_Doors()
    open door
    EXECUTE SEQUENCE Elevator_Overweight()
    IF door open
        start Countdown 20 seconds
        IF the button Close_Door is pressed
            set countdown to 3 seconds
        ELSE IF the countdown reach 0
            start SEQUENCE DoorCloseFailSafe()
    ENDIF
ENDSEQUENCE

SEQUENCE Anti_Shenanigans()
    IF all input request in elevator are set in less then 5 seconds
        reset the Elevator_queue
    ENDIF
ENDSEQUENCE

'/****************** Safety SEQUENCEs  *******************/

SEQUENCE SlowDownSafety()
    IF we are traveling up at full speed
        IF we are only 1 floor away from the lowest destination floor
            slow down
        ENDIF
    ELSE IF we are traveling down at full speed
        IF we are only 1 floor away from the highest destination floor
            slow down
        ENDIF
    ENDIF
ENDSEQUENCE

SEQUENCE DoubleSafetyStop()
    IF we are traveling up at full speed 
        IF we are at floor 9
            Slow Down
            Stop at floor 10
        ENDIF
    ELSE IF we are traveling down at full speed
        IF we are at floor 2 
            slow down
            stop at floor 1
        ENDIF
    ENDIF
ENDSEQUENCE

SEQUENCE DoorCloseFailSafe()
    WHILE door close
        IF something obstruct the door OR something pass in between the door OR the button Open_Door is pressed
            stop the action of the doors
            open doors
        ELSE 
            close doors
        ENDIF
    ENDWHILE
ENDSEQUENCE


'/******************* Operative ***********************/

SEQUENCE request_Floor()      ' Request OUTSIDE elevator
    WHEN button_Up is pressed
        SET user_travel to up
        EXECUTE SEQUENCE display_Btn_Active()
        ADD to elevator_queue 

    WHEN button_Down is pressed
        SET user_travel to down
        EXECUTE SEQUENCE display_Btn_Active()
        ADD to Elevator_queue

ENDSEQUENCE

SEQUENCE request_Elevator()     ' Request INSIDE Elevator
    WHEN Button_Is_Press
    EXECUTE SEQUENCE display_Btn_Active()
        IF user_input > current_floor 
            SET user_travel to up
            ADD to Elevator_queue
        ELSE IF user_input < current_Floor
            SET user_travel to down
            ADD to Elevator_queue
        ENDIF
ENDSEQUENCE

SEQUENCE Find_Elevator()     ' Choose Elevator

ENDSEQUENCE




SEQUENCE Elevator_Move_Schema()

    EXECUTE SEQUENCE ShowTime(), 
    EXECUTE SEQUENCE display_Btn_Active(),
    EXECUTE SEQUENCE display_Active_Floor(),
    EXECUTE SEQUENCE Anti_Shenanigans()

    
        IF elevator is at the same floor
            EXECUTE SEQUENCE Elevator_Overweight()
            EXECUTE SEQUENCE Open_and_Close_Doors()
            IF door is close 
                EXECUTE SEQUENCE Queue() of user input
            ELSE
                wait
            ENDIF
        ELSE IF elevator is > then the request AND request go down
                IF elevator is 2 floor away or more from requested floor
                    Travel full speed to destination
                    EXECUTE SEQUENCE SlowDownSafety() AND DoubleSafetyStop()
                ELSE
                    travel normal speed to destination
                    EXECUTE SEQUENCE SlowDownSafety() AND DoubleSafetyStop()
                ENDIF
        ELSE IF elevator is < then the request AND request go down
                IF elevator is 2 floor away or more from requested floor
                    Travel full speed to destination
                    EXECUTE SEQUENCE SlowDownSafety() AND DoubleSafetyStop()
                ELSE
                    travel normal speed to destination
                    EXECUTE SEQUENCE SlowDownSafety() AND DoubleSafetyStop()
                ENDIF
            ENDIF
        ENDIF
    EXECUTE SEQUENCE Initialize()
ENDSEQUENCE